manifest {
  description = 'Covidestim pipeline implemented w Nextflow'
  author = 'Marcus Russi'
  nextflowVersion = '>=21.09.0-edge'
  mainScript = 'main.nf'
}

// Create all report styles
timeline.enabled = true
report.enabled   = true
trace.enabled    = true

plugins {
  id 'nf-amazon'
}

profiles {
  states {
    params.time = ["45m", "45m", "45m"]
  }

  counties {
    params.time = ["70m", "2h", "150m"]
  }

  local {
    params.s3pub   = false

    params.outdir  = "results"
    timeline.file  = "$params.outdir/timeline.html"
    report.file    = "$params.outdir/report.html"
    trace.file     = "$params.outdir/trace.txt"

    singularity.enabled = false
    docker.enabled      = true
  }

  db_local {
    // Give the containers access to the host network and give them access to
    // a test PostgREST API server exposed on port 3000
    docker.runOptions = "--network host"

    env.COVIDESTIM_ENDPOINT = "http://localhost:3000/rpc/insert_run"
  }

  db_prod {
    env.COVIDESTIM_ENDPOINT = "https://api2.covidestim.org/rpc/insert_run"
  }

  slurm {
    params.s3pub        = true
    params.webdir       = "s3://covidestim/"

    params.outdir       = "results"
    timeline.file       = "$params.outdir/timeline.html"
    report.file         = "$params.outdir/report.html"
    trace.file          = "$params.outdir/trace.txt"

    process.executor    = 'slurm'
    singularity.enabled = true
  }

  farnam {
    clusterOptions = "-A covid -p covid"
  }

  amazon {
    params.s3pub  = true
    params.webdir = "s3://covidestim/"

    params.outdir = "s3://nf-test-results/results/"
    timeline.file = "$params.outdir/timeline.html"
    report.file   = "$params.outdir/report.html"
    trace.file    = "$params.outdir/trace.txt"

    aws {
      maxConnections   = 30
      uploadMaxThreads = 4
      batch {
        maxParallelTransfers = 100
      }
    }
  }
}
